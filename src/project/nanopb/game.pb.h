/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Nov  5 15:45:37 2016. */

#ifndef PB_GAME_PB_H_INCLUDED
#define PB_GAME_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Damage {
    int32_t originatingPlayerId;
    int32_t amountOfDamage;
/* @@protoc_insertion_point(struct:Damage) */
} Damage;

typedef struct _GameData {
    int32_t originalPlayerId;
    pb_callback_t damagesDone;
/* @@protoc_insertion_point(struct:GameData) */
} GameData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Damage_init_default                      {0, 0}
#define GameData_init_default                    {0, {{NULL}, NULL}}
#define Damage_init_zero                         {0, 0}
#define GameData_init_zero                       {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Damage_originatingPlayerId_tag           1
#define Damage_amountOfDamage_tag                2
#define GameData_originalPlayerId_tag            1
#define GameData_damagesDone_tag                 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Damage_fields[3];
extern const pb_field_t GameData_fields[3];

/* Maximum encoded size of messages (where known) */
#define Damage_size                              22
/* GameData_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GAME_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
